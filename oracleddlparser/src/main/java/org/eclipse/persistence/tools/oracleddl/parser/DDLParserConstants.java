/* Generated By:JJTree&JavaCC: Do not edit this line. DDLParserConstants.java */
/*******************************************************************************
 * Copyright (c) 2011 Oracle. All rights reserved.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0
 * which accompanies this distribution.
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * Contributors:
 *     Mike Norman - June 10 2011, created DDL parser package
 ******************************************************************************/
package org.eclipse.persistence.tools.oracleddl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface DDLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT_LINE = 6;
  /** RegularExpression Id. */
  int COMMENT_BLOCK = 7;
  /** RegularExpression Id. */
  int O_ASSIGN = 8;
  /** RegularExpression Id. */
  int O_ASTERISK = 9;
  /** RegularExpression Id. */
  int O_ATSIGN = 10;
  /** RegularExpression Id. */
  int O_CLOSEPAREN = 11;
  /** RegularExpression Id. */
  int O_CONCAT = 12;
  /** RegularExpression Id. */
  int O_COLON = 13;
  /** RegularExpression Id. */
  int O_COMMA = 14;
  /** RegularExpression Id. */
  int O_DOT = 15;
  /** RegularExpression Id. */
  int O_DOUBLEDOT = 16;
  /** RegularExpression Id. */
  int O_DOLLAR = 17;
  /** RegularExpression Id. */
  int O_PERCENT = 18;
  /** RegularExpression Id. */
  int O_EQUAL = 19;
  /** RegularExpression Id. */
  int O_GREATER = 20;
  /** RegularExpression Id. */
  int O_GREATEREQUAL = 21;
  /** RegularExpression Id. */
  int O_JOINPLUS = 22;
  /** RegularExpression Id. */
  int O_LESS = 23;
  /** RegularExpression Id. */
  int O_LESSEQUAL = 24;
  /** RegularExpression Id. */
  int O_MINUS = 25;
  /** RegularExpression Id. */
  int O_NOTEQUAL2 = 26;
  /** RegularExpression Id. */
  int O_NOTEQUAL = 27;
  /** RegularExpression Id. */
  int O_OPENPAREN = 28;
  /** RegularExpression Id. */
  int O_PLUS = 29;
  /** RegularExpression Id. */
  int O_POUND = 30;
  /** RegularExpression Id. */
  int O_QUESTIONMARK = 31;
  /** RegularExpression Id. */
  int O_SEMICOLON = 32;
  /** RegularExpression Id. */
  int O_SLASH = 33;
  /** RegularExpression Id. */
  int O_TILDE = 34;
  /** RegularExpression Id. */
  int S_NUMBER = 35;
  /** RegularExpression Id. */
  int FLOAT = 36;
  /** RegularExpression Id. */
  int INTEGER = 37;
  /** RegularExpression Id. */
  int DIGIT = 38;
  /** RegularExpression Id. */
  int R_ALL = 39;
  /** RegularExpression Id. */
  int R_ALTER = 40;
  /** RegularExpression Id. */
  int R_ANCHORED_ROWTYPE = 41;
  /** RegularExpression Id. */
  int R_ANCHORED_TYPE = 42;
  /** RegularExpression Id. */
  int R_AND = 43;
  /** RegularExpression Id. */
  int R_AS = 44;
  /** RegularExpression Id. */
  int R_ASC = 45;
  /** RegularExpression Id. */
  int R_AT = 46;
  /** RegularExpression Id. */
  int R_BEGIN = 47;
  /** RegularExpression Id. */
  int R_BETWEEN = 48;
  /** RegularExpression Id. */
  int R_BY = 49;
  /** RegularExpression Id. */
  int R_CASE = 50;
  /** RegularExpression Id. */
  int R_CHECK = 51;
  /** RegularExpression Id. */
  int R_CLUSTERS = 52;
  /** RegularExpression Id. */
  int R_CLUSTER = 53;
  /** RegularExpression Id. */
  int R_COLAUTH = 54;
  /** RegularExpression Id. */
  int R_COLUMNS = 55;
  /** RegularExpression Id. */
  int R_COMPRESS = 56;
  /** RegularExpression Id. */
  int R_CONNECT = 57;
  /** RegularExpression Id. */
  int R_CRASH = 58;
  /** RegularExpression Id. */
  int R_CREATE = 59;
  /** RegularExpression Id. */
  int R_CURSOR = 60;
  /** RegularExpression Id. */
  int R_DECLARE = 61;
  /** RegularExpression Id. */
  int R_DEFAULT = 62;
  /** RegularExpression Id. */
  int R_DESC = 63;
  /** RegularExpression Id. */
  int R_DISTINCT = 64;
  /** RegularExpression Id. */
  int R_DROP = 65;
  /** RegularExpression Id. */
  int R_ELSE = 66;
  /** RegularExpression Id. */
  int R_END = 67;
  /** RegularExpression Id. */
  int R_EXCEPTION = 68;
  /** RegularExpression Id. */
  int R_EXCLUSIVE = 69;
  /** RegularExpression Id. */
  int R_FETCH = 70;
  /** RegularExpression Id. */
  int R_FOR = 71;
  /** RegularExpression Id. */
  int R_FROM = 72;
  /** RegularExpression Id. */
  int R_FUNCTION = 73;
  /** RegularExpression Id. */
  int R_GOTO = 74;
  /** RegularExpression Id. */
  int R_GRANT = 75;
  /** RegularExpression Id. */
  int R_GROUP = 76;
  /** RegularExpression Id. */
  int R_HAVING = 77;
  /** RegularExpression Id. */
  int R_IDENTIFIED = 78;
  /** RegularExpression Id. */
  int R_IF = 79;
  /** RegularExpression Id. */
  int R_IN = 80;
  /** RegularExpression Id. */
  int R_INDEX = 81;
  /** RegularExpression Id. */
  int R_INDEXES = 82;
  /** RegularExpression Id. */
  int R_INSERT = 83;
  /** RegularExpression Id. */
  int R_INTERSECT = 84;
  /** RegularExpression Id. */
  int R_INTO = 85;
  /** RegularExpression Id. */
  int R_IS = 86;
  /** RegularExpression Id. */
  int R_LIKE = 87;
  /** RegularExpression Id. */
  int R_LOCK = 88;
  /** RegularExpression Id. */
  int R_MINUS = 89;
  /** RegularExpression Id. */
  int R_MODE = 90;
  /** RegularExpression Id. */
  int R_NOCOMPRESS = 91;
  /** RegularExpression Id. */
  int R_NO = 92;
  /** RegularExpression Id. */
  int R_NOT = 93;
  /** RegularExpression Id. */
  int R_NOWAIT = 94;
  /** RegularExpression Id. */
  int R_NULL = 95;
  /** RegularExpression Id. */
  int R_OF = 96;
  /** RegularExpression Id. */
  int R_ON = 97;
  /** RegularExpression Id. */
  int R_OPTION = 98;
  /** RegularExpression Id. */
  int R_OR = 99;
  /** RegularExpression Id. */
  int R_ORDER = 100;
  /** RegularExpression Id. */
  int R_OVERLAPS = 101;
  /** RegularExpression Id. */
  int R_PROCEDURE = 102;
  /** RegularExpression Id. */
  int R_PUBLIC = 103;
  /** RegularExpression Id. */
  int R_RESOURCE = 104;
  /** RegularExpression Id. */
  int R_REVOKE = 105;
  /** RegularExpression Id. */
  int R_SELECT = 106;
  /** RegularExpression Id. */
  int R_SHARE = 107;
  /** RegularExpression Id. */
  int R_SIZE = 108;
  /** RegularExpression Id. */
  int R_SQL = 109;
  /** RegularExpression Id. */
  int R_START = 110;
  /** RegularExpression Id. */
  int R_SUBTYPE = 111;
  /** RegularExpression Id. */
  int R_TABAUTH = 112;
  /** RegularExpression Id. */
  int R_TABLE = 113;
  /** RegularExpression Id. */
  int R_THEN = 114;
  /** RegularExpression Id. */
  int R_TO = 115;
  /** RegularExpression Id. */
  int R_TYPE = 116;
  /** RegularExpression Id. */
  int R_UNION = 117;
  /** RegularExpression Id. */
  int R_UNIQUE = 118;
  /** RegularExpression Id. */
  int R_UPDATE = 119;
  /** RegularExpression Id. */
  int R_VALUES = 120;
  /** RegularExpression Id. */
  int R_VIEW = 121;
  /** RegularExpression Id. */
  int R_VIEWS = 122;
  /** RegularExpression Id. */
  int R_WHEN = 123;
  /** RegularExpression Id. */
  int R_WHERE = 124;
  /** RegularExpression Id. */
  int R_WITH = 125;
  /** RegularExpression Id. */
  int R_YES = 126;
  /** RegularExpression Id. */
  int K_ARRAY = 127;
  /** RegularExpression Id. */
  int K_AUTHID = 128;
  /** RegularExpression Id. */
  int K_AUTONOMOUS_TRANSACTION = 129;
  /** RegularExpression Id. */
  int K_BFILE = 130;
  /** RegularExpression Id. */
  int K_BINARY_DOUBLE = 131;
  /** RegularExpression Id. */
  int K_BINARY_FLOAT = 132;
  /** RegularExpression Id. */
  int K_BINARY_INTEGER = 133;
  /** RegularExpression Id. */
  int K_BLOB = 134;
  /** RegularExpression Id. */
  int K_BOOLEAN = 135;
  /** RegularExpression Id. */
  int K_BYTE = 136;
  /** RegularExpression Id. */
  int K_CHAR = 137;
  /** RegularExpression Id. */
  int K_CHARACTER = 138;
  /** RegularExpression Id. */
  int K_CHARSET = 139;
  /** RegularExpression Id. */
  int K_CLOB = 140;
  /** RegularExpression Id. */
  int K_COMMIT = 141;
  /** RegularExpression Id. */
  int K_CONSTANT = 142;
  /** RegularExpression Id. */
  int K_CONSTRAINT = 143;
  /** RegularExpression Id. */
  int K_CURRENT_USER = 144;
  /** RegularExpression Id. */
  int K_DATE = 145;
  /** RegularExpression Id. */
  int K_DAY = 146;
  /** RegularExpression Id. */
  int K_DEC = 147;
  /** RegularExpression Id. */
  int K_DECIMAL = 148;
  /** RegularExpression Id. */
  int K_DEFINER = 149;
  /** RegularExpression Id. */
  int K_DELETE = 150;
  /** RegularExpression Id. */
  int K_DETERMINISTIC = 151;
  /** RegularExpression Id. */
  int K_DOUBLE = 152;
  /** RegularExpression Id. */
  int K_ENABLE = 153;
  /** RegularExpression Id. */
  int K_EXCEPTION_INIT = 154;
  /** RegularExpression Id. */
  int K_FINAL = 155;
  /** RegularExpression Id. */
  int K_FLOAT = 156;
  /** RegularExpression Id. */
  int K_FORCE = 157;
  /** RegularExpression Id. */
  int K_GLOBAL = 158;
  /** RegularExpression Id. */
  int K_INLINE = 159;
  /** RegularExpression Id. */
  int K_INSTANTIABLE = 160;
  /** RegularExpression Id. */
  int K_INT = 161;
  /** RegularExpression Id. */
  int K_INTEGER = 162;
  /** RegularExpression Id. */
  int K_INTERVAL = 163;
  /** RegularExpression Id. */
  int K_KEY = 164;
  /** RegularExpression Id. */
  int K_LOCAL = 165;
  /** RegularExpression Id. */
  int K_LONG = 166;
  /** RegularExpression Id. */
  int K_MLSLABEL = 167;
  /** RegularExpression Id. */
  int K_MONTH = 168;
  /** RegularExpression Id. */
  int K_NATIONAL = 169;
  /** RegularExpression Id. */
  int K_NATURAL = 170;
  /** RegularExpression Id. */
  int K_NCHAR = 171;
  /** RegularExpression Id. */
  int K_NCLOB = 172;
  /** RegularExpression Id. */
  int K_NOCOPY = 173;
  /** RegularExpression Id. */
  int K_NUMBER = 174;
  /** RegularExpression Id. */
  int K_NUMERIC = 175;
  /** RegularExpression Id. */
  int K_NVARCHAR2 = 176;
  /** RegularExpression Id. */
  int K_NVARCHAR = 177;
  /** RegularExpression Id. */
  int K_OBJECT = 178;
  /** RegularExpression Id. */
  int K_OID = 179;
  /** RegularExpression Id. */
  int K_ORGANIZATION = 180;
  /** RegularExpression Id. */
  int K_OUT = 181;
  /** RegularExpression Id. */
  int K_OVERFLOW = 182;
  /** RegularExpression Id. */
  int K_PACKAGE = 183;
  /** RegularExpression Id. */
  int K_PARALLEL_ENABLE = 184;
  /** RegularExpression Id. */
  int K_PIPELINED = 185;
  /** RegularExpression Id. */
  int K_PLS_INTEGER = 186;
  /** RegularExpression Id. */
  int K_POSITIVE = 187;
  /** RegularExpression Id. */
  int K_PRAGMA = 188;
  /** RegularExpression Id. */
  int K_PRECISION = 189;
  /** RegularExpression Id. */
  int K_PRESERVE = 190;
  /** RegularExpression Id. */
  int K_PRIMARY = 191;
  /** RegularExpression Id. */
  int K_RANGE = 192;
  /** RegularExpression Id. */
  int K_RAW = 193;
  /** RegularExpression Id. */
  int K_REAL = 194;
  /** RegularExpression Id. */
  int K_RECORD = 195;
  /** RegularExpression Id. */
  int K_REF = 196;
  /** RegularExpression Id. */
  int K_REPLACE = 197;
  /** RegularExpression Id. */
  int K_RESTRICT_REFERENCES = 198;
  /** RegularExpression Id. */
  int K_RESULT_CACHE = 199;
  /** RegularExpression Id. */
  int K_RETURN = 200;
  /** RegularExpression Id. */
  int K_RNDS = 201;
  /** RegularExpression Id. */
  int K_RNPS = 202;
  /** RegularExpression Id. */
  int K_ROWID = 203;
  /** RegularExpression Id. */
  int K_ROWS = 204;
  /** RegularExpression Id. */
  int K_SECOND = 205;
  /** RegularExpression Id. */
  int K_SERIALLY_REUSABLE = 206;
  /** RegularExpression Id. */
  int K_SET = 207;
  /** RegularExpression Id. */
  int K_SIGNTYPE = 208;
  /** RegularExpression Id. */
  int K_SIMPLE_DOUBLE = 209;
  /** RegularExpression Id. */
  int K_SIMPLE_FLOAT = 210;
  /** RegularExpression Id. */
  int K_SIMPLE_INTEGER = 211;
  /** RegularExpression Id. */
  int K_SMALLINT = 212;
  /** RegularExpression Id. */
  int K_STRING = 213;
  /** RegularExpression Id. */
  int K_SYS_REFCURSOR = 214;
  /** RegularExpression Id. */
  int K_TEMPORARY = 215;
  /** RegularExpression Id. */
  int K_TIME = 216;
  /** RegularExpression Id. */
  int K_TIMESTAMP = 217;
  /** RegularExpression Id. */
  int K_TRUST = 218;
  /** RegularExpression Id. */
  int K_UROWID = 219;
  /** RegularExpression Id. */
  int K_VARCHAR2 = 220;
  /** RegularExpression Id. */
  int K_VARCHAR = 221;
  /** RegularExpression Id. */
  int K_VARRAY = 222;
  /** RegularExpression Id. */
  int K_VARYING = 223;
  /** RegularExpression Id. */
  int K_WNDS = 224;
  /** RegularExpression Id. */
  int K_WNPS = 225;
  /** RegularExpression Id. */
  int K_YEAR = 226;
  /** RegularExpression Id. */
  int K_ZONE = 227;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 228;
  /** RegularExpression Id. */
  int LETTER = 229;
  /** RegularExpression Id. */
  int SPECIAL_CHARS = 230;
  /** RegularExpression Id. */
  int S_BIND = 231;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 232;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 233;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<COMMENT_LINE>",
    "<COMMENT_BLOCK>",
    "\":=\"",
    "\"*\"",
    "\"@\"",
    "\")\"",
    "\"||\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"..\"",
    "\"$\"",
    "\"%\"",
    "\"=\"",
    "\">\"",
    "\">=\"",
    "\"(+)\"",
    "\"<\"",
    "\"<=\"",
    "\"-\"",
    "\"<>\"",
    "\"!=\"",
    "\"(\"",
    "\"+\"",
    "\"#\"",
    "\"?\"",
    "\";\"",
    "\"/\"",
    "\"~\"",
    "<S_NUMBER>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "\"ALL\"",
    "\"ALTER\"",
    "\"%ROWTYPE\"",
    "\"%TYPE\"",
    "\"AND\"",
    "\"AS\"",
    "\"ASC\"",
    "\"AT\"",
    "\"BEGIN\"",
    "\"BETWEEN\"",
    "\"BY\"",
    "\"CASE\"",
    "\"CHECK\"",
    "\"CLUSTERS\"",
    "\"CLUSTER\"",
    "\"COLAUTH\"",
    "\"COLUMNS\"",
    "\"COMPRESS\"",
    "\"CONNECT\"",
    "\"CRASH\"",
    "\"CREATE\"",
    "\"CURSOR\"",
    "\"DECLARE\"",
    "\"DEFAULT\"",
    "\"DESC\"",
    "\"DISTINCT\"",
    "\"DROP\"",
    "\"ELSE\"",
    "\"END\"",
    "\"EXCEPTION\"",
    "\"EXCLUSIVE\"",
    "\"FETCH\"",
    "\"FOR\"",
    "\"FROM\"",
    "\"FUNCTION\"",
    "\"GOTO\"",
    "\"GRANT\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "\"IDENTIFIED\"",
    "\"IF\"",
    "\"IN\"",
    "\"INDEX\"",
    "\"INDEXES\"",
    "\"INSERT\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"LIKE\"",
    "\"LOCK\"",
    "\"MINUS\"",
    "\"MODE\"",
    "\"NOCOMPRESS\"",
    "\"\\\'NO\\\'\"",
    "\"NOT\"",
    "\"NOWAIT\"",
    "\"NULL\"",
    "\"OF\"",
    "\"ON\"",
    "\"OPTION\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"OVERLAPS\"",
    "\"PROCEDURE\"",
    "\"PUBLIC\"",
    "\"RESOURCE\"",
    "\"REVOLE\"",
    "\"SELECT\"",
    "\"SHARE\"",
    "\"SIZE\"",
    "\"SQL\"",
    "\"START\"",
    "\"SUBTYPE\"",
    "\"TABAUTH\"",
    "\"TABLE\"",
    "\"THEN\"",
    "\"TO\"",
    "\"TYPE\"",
    "\"UNION\"",
    "\"UNIQUE\"",
    "\"UPDATE\"",
    "\"VALUES\"",
    "\"VIEW\"",
    "\"VIEWS\"",
    "\"WHEN\"",
    "\"WHERE\"",
    "\"WITH\"",
    "\"\\\'YES\\\'\"",
    "\"ARRAY\"",
    "\"AUTHID\"",
    "\"AUTONOMOUS_TRANSACTION\"",
    "\"BFILE\"",
    "\"BINARY_DOUBLE\"",
    "\"BINARY_FLOAT\"",
    "\"BINARY_INTEGER\"",
    "\"BLOB\"",
    "\"BOOLEAN\"",
    "\"BYTE\"",
    "\"CHAR\"",
    "\"CHARACTER\"",
    "\"CHARSET\"",
    "\"CLOB\"",
    "\"COMMIT\"",
    "\"CONSTANT\"",
    "\"CONSTRAINT\"",
    "\"CURRENT_USER\"",
    "\"DATE\"",
    "\"DAY\"",
    "\"DEC\"",
    "\"DECIMAL\"",
    "\"DEFINER\"",
    "\"DELETE\"",
    "\"DETERMINISTIC\"",
    "\"DOUBLE\"",
    "\"ENABLE\"",
    "\"EXCEPTION_INIT\"",
    "\"FINAL\"",
    "\"FLOAT\"",
    "\"FORCE\"",
    "\"GLOBAL\"",
    "\"INLINE\"",
    "\"INSTANTIABLE\"",
    "\"INT\"",
    "\"INTEGER\"",
    "\"INTERVAL\"",
    "\"KEY\"",
    "\"LOCAL\"",
    "\"LONG\"",
    "\"MLSLABEL\"",
    "\"MONTH\"",
    "\"NATIONAL\"",
    "\"NATURAL\"",
    "\"NCHAR\"",
    "\"NCLOB\"",
    "\"NOCOPY\"",
    "\"NUMBER\"",
    "\"NUMERIC\"",
    "\"NVARCHAR2\"",
    "\"NVARCHAR\"",
    "\"OBJECT\"",
    "\"OID\"",
    "\"ORGANIZATION\"",
    "\"OUT\"",
    "\"OVERFLOW\"",
    "\"PACKAGE\"",
    "\"PARALLEL_ENABLE\"",
    "\"PIPELINED\"",
    "\"PLS_INTEGER\"",
    "\"POSITIVE\"",
    "\"PRAGMA\"",
    "\"PRECISION\"",
    "\"PRESERVE\"",
    "\"PRIMARY\"",
    "\"RANGE\"",
    "\"RAW\"",
    "\"REAL\"",
    "\"RECORD\"",
    "\"REF\"",
    "\"REPLACE\"",
    "\"RESTRICT_REFERENCES\"",
    "\"RESULT_CACHE\"",
    "\"RETURN\"",
    "\"RNDS\"",
    "\"RNPS\"",
    "\"ROWID\"",
    "\"ROWS\"",
    "\"SECOND\"",
    "\"SERIALLY_REUSABLE\"",
    "\"SET\"",
    "\"SIGNTYPE\"",
    "\"SIMPLE_DOUBLE\"",
    "\"SIMPLE_FLOAT\"",
    "\"SIMPLE_INTEGER\"",
    "\"SMALLINT\"",
    "\"STRING\"",
    "\"SYS_REFCURSOR\"",
    "\"TEMPORARY\"",
    "\"TIME\"",
    "\"TIMESTAMP\"",
    "\"TRUST\"",
    "\"UROWID\"",
    "\"VARCHAR2\"",
    "\"VARCHAR\"",
    "\"VARRAY\"",
    "\"VARYING\"",
    "\"WNDS\"",
    "\"WNPS\"",
    "\"YEAR\"",
    "\"ZONE\"",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<SPECIAL_CHARS>",
    "<S_BIND>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
  };

}
